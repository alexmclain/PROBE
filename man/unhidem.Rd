% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unhidem_wrapper.R
\name{unhidem}
\alias{unhidem}
\title{Fitting a UNivariate approach to HIgh-Dimensional linear regression via the EM algorithm (UNHIDEM).}
\usage{
unhidem(Y, Z, X, alpha, ep, B, adj, maxit, one.sided, Y_test, Z_test, X_test, verbose, signal, eta_i, plot_ind, LR, C)
}
\arguments{
\item{Y}{The outcome variable.}

\item{Z}{An \code{n x M} matrix of sparse predictors variables.}

\item{X}{(optional) An \code{n x p} matrix or dataframe of other predictors not subjected to the sparsity assumption.}

\item{alpha}{Type I error; significance level}

\item{ep}{Value against which to compare convergence criterion (default = 0.1).}

\item{maxit}{Maximum number of iterations the algorithm will run for (default = 10000).}

\item{Y_test}{(optional) Test Y data used plotting purposes only (doesn't impact results).}

\item{Z_test}{(optional) Test Z data used plotting purposes only (doesn't impact results).}

\item{X_test}{(optional) Test X data used plotting purposes only (doesn't impact results).}

\item{verbose}{A logical (true/false) value whether to print algorithm iteration progress and summary quantities (default = FALSE).}

\item{signal}{(optional) A vector of indicies of the true non-null coefficients. This is used to calculate the true and false discovery rates by iteration for simulated data. Used plotting purposes only (doesn't impact results).}

\item{eta_i}{(optional) A vector of the true signal. This is used to calculate the MSE by iteration for simulated data. Used plotting purposes only (doesn't impact results).}

\item{plot_ind}{A logical values (True/False) for whether to output plots on algorithm results and progress (default = FALSE)}
}
\value{
A list including the MAP estimates of the beta coefficients (beta_hat), their variance (beta_hat_var), the posterior expectation of the latent variables (gamma_hat), an estimate residual variance (sigma2_est), the results of the final E_step (E_step), results of the calibration model (Calb_mod) the total number of iterations before convergence (count), results by iteration (plot_dat), p-value of the test for the learning rate (Seq_test), and results from the final M_step (M_step).
}
\description{
A wrapper function for the main UNHIDEM algorithm function.  The R package is a work in progress.
}
\examples{
### Example
data(Sim_data)
attach(Sim_data)
alpha <- 0.05
plot_ind <- TRUE

# Run the analysis. Y_test and Z_test are included for plotting purposes only
full_res <- unhidem( Y = Y, Z = Z, alpha = alpha, plot_ind = plot_ind, Y_test = Y_test, Z_test = Z_test)

# Predicting for test data
pred_res <- predict_unhidem_func(full_res, Z = Z_test, alpha = alpha)
head(pred_res)

# Estimate of the residual variance
full_res$sigma2_est

### Example with additional covariate data X (not subjected to the sparsity assumption)
data(Sim_data_cov)
attach(Sim_data_cov)

# Calculating the true signal (the impact of Z only)
eta_i <- apply(t(Z)*beta_tr,2,sum) 
# Run the analysis. eta_i (true signal) and signal are included for plotting purposes only.
full_res <- unhidem( Y = Y, Z = Z, X = X, alpha = alpha, plot_ind = plot_ind, signal = signal, eta_i  = eta_i)

# Final estimates of the impact of X versus the true values:
data.frame(true_values = beta_X_tr, full_res$Calb_mod$res_data[-2,])

#Compare to a standard linear model of X on Y:
summary(lm(Y~X$Cont_cov + X$Binary_cov))$coefficients


}
\seealso{
predict_unhidem_func to obtain predictions, confidence intervals and prediction intervals from UNHIDEM.
}
